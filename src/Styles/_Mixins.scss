@use "./Variables" as *;
// underline Hover

@mixin underlineActive() {
  &::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    border-radius: 2px;
    background-color: $primaryColor;
    inset: auto 0px 0px 0px;
  }
}

// underline Active
@mixin underline() {
  &::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    border-radius: 2px;
    background-color: $primaryColor;
    bottom: 0;
    left: -100%;
    transition: $transitionDuration;
  }
  &:hover {
    &::after {
      transform: translateX(100%);
    }
  }
}
// Buttons Styling
@mixin Buttons($type, $isFull) {
  @if ($type == "main") {
    background-color: $primaryColor;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    border: $borderPrimary;
    &:hover {
      background-color: $secondaryColor;
      color: $primaryColor;
      .button-arrow {
        transform: translateX(5px);
      }
    }
    @if ($isFull) {
      width: 100%;
    }
  } @else if($type == "hollow") {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    border: $borderPrimary;
    &:hover {
      background-color: $primaryColor;
      color: $secondaryColor;
      .button-arrow {
        transform: translateX(5px);
      }
    }
  } @else if($type == "arrow") {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    position: relative;
    overflow: hidden;
    &::after {
      content: "";
      position: absolute;
      width: 100%;
      height: 1px;
      background-color: $primaryColor;
      bottom: 0;
      left: -100%;
      transition: $transitionDuration;
    }
    &:hover {
      &::after {
        transform: translateX(100%);
      }
      .button-arrow {
        transform: translateX(5px);
      }
    }
  } @else if($type == "dark") {
    background-color: $bgDark;
    color: $secondaryColor;
    font-size: $smallPragraph;
    &:hover {
      background-color: $secondaryColor;
      color: $primaryColor;
    }
  } @else if($type == "quantity") {
    display: flex;
    justify-content: center;
    align-items: center;
    width: max-content;
    border: $borderPrimary;
    .plus,
    .minus {
      font-size: clamp(0.15rem, 2vw, 0.2rem);
      background-color: $primaryColor;
      color: $secondaryColor;
      padding: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      &:hover {
        background-color: $secondaryColor;
        color: $primaryColor;
      }
    }
    span {
      font-size: 0.3rem;
      line-height: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      color: $primaryColor;
      width: 45px;
    }
  } @else if($type == "close") {
    background-color: $primaryColor;
    padding: 3px;
    font-size: 18px;
    color: $secondaryColor;
    border: $borderPrimary;
    &:hover {
      background-color: $secondaryColor;
      color: $primaryColor;
    }
  } @else if($type == "remove") {
    padding: 3px;
    font-size: 18px;
    color: $primaryColor;
    position: absolute;
    inset: 0px auto auto 0px;
  } @else if($type == "top") {
    position: fixed;
    right: 10px;
    bottom: 10px;
    background-color: $primaryColor;
    color: $secondaryColor;
    padding: 6px;
    border-radius: $templateBorderRadious;
    border: $borderPrimary;
    visibility: hidden;
    opacity: 0;
    &:hover {
      background-color: $secondaryColor;
      color: $primaryColor;
    }
  }
}

// Template menus
@mixin Menu($menuType) {
  background-color: rgba(255, 255, 255, 0.671);
  backdrop-filter: blur(5px);
  transition: $transitionDuration;
  box-shadow: $bigShadow;
  opacity: 0;
  @if ($menuType == "navMenu") {
    width: 100%;
    padding: $cardPadding;
    transform: translateY(-120%);
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
    li {
      width: max-content;
    }
  } @else if($menuType == "lang-menu") {
    position: absolute;
    z-index: 10;
    inset: auto auto -98px 0px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: max-content;
    border-radius: 5px;
    img {
      height: 14px;
    }
    visibility: hidden;
  }
}
